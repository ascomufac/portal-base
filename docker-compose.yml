version: "4"
services:
  webserver:
    image: traefik:v2.9

    ports:
      - "81:80"
      - "443:443"

    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/local/plone/cert:/certs
      #- "./dynamic:/dynamic"
      
  agencia:
    image: ghcr.io/plonegovbr/portal:latest
    ports:
      - '3002:3000'
    restart: always
    labels:
      - traefik.enable=true
      #service
      - traefik.http.services.plone-agencia.loadbalancer.server.port=3002
      # HOST: main
      - traefik.http.routers.agencia.rule=Host(`agencia.localhost`)
      - traefik.http.routers.agencia.service=plone-agencia
      - traefik.http.routers.agencia.middlewares=gzip
    environment:
      # These are needed in a Docker environment since the
      # routing needs to be amended. You can point to the
      # internal network alias.
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/agencia
      RAZZLE_DEV_PROXY_API_PATH: http://backend:8080/agencia
    depends_on:
      - backend
    volumes:
      - ./frontend/src/addons:/src/addons
      
  portal:
    image: ghcr.io/plonegovbr/portal:latest
    ports:
      - '3001:3000'
    restart: always
    labels:
      - traefik.enable=true
      #service
      - traefik.http.services.plone-portal.loadbalancer.server.port=3001
      # HOST: main
      - traefik.http.routers.portal.rule=Host(`portal.localhost`)
      - traefik.http.routers.portal.service=plone-portal
      - traefik.http.routers.portal.middlewares=gzip
    environment:
      # These are needed in a Docker environment since the
      # routing needs to be amended. You can point to the
      # internal network alias.
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/portal
      RAZZLE_DEV_PROXY_API_PATH: http://backend:8080/portal
    depends_on:
      - backend
    volumes:
      - ./frontend/src/addons:/src/addons

  editais:
    image: plone/volto:latest
    ports:
      - '3003:3000'
    restart: always
    labels:
      - traefik.enable=true
      #service
      - traefik.http.services.plone-editais.loadbalancer.server.port=3003
      # HOST: main
      - traefik.http.routers.portal.rule=Host(`editais.localhost`)
      - traefik.http.routers.portal.service=plone-editais
      - traefik.http.routers.portal.middlewares=gzip
    environment:
      # These are needed in a Docker environment since the
      # routing needs to be amended. You can point to the
      # internal network alias.
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/editais
      RAZZLE_DEV_PROXY_API_PATH: http://backend:8080/editais
    depends_on:
      - backend
    volumes:
      - ./frontend/src/addons:/src/addons
      
  
  backend:
    image: plone/plone-backend:6.0.12
    environment:
      SITE: Plone
      CORS_ALLOW_ORIGIN: '*'
      ADDONS: "collective.exportimport"
    ports:
      - 80:8080
    labels:
      - "traefik.http.routers.seusite.rule=Host(`www3.ufac.br`)"
      - "traefik.http.routers.seusite.entrypoints=websecure"
      - "traefik.http.routers.seusite.tls=true"
      - "traefik.http.routers.seusite.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-editais.redirectregex.regex=^http://www3.ufac.br/?$$"
      - "traefik.http.middlewares.redirect-to-editais.redirectregex.replacement=http://www3.ufac.br/editais"
      - "traefik.http.middlewares.redirect-to-editais.redirectregex.permanent=true"
      - "traefik.http.routers.plone.middlewares=redirect-to-editais"
    volumes:
      - data:/data

volumes:
  data:
